# Do not modify. Created by annot.pl error.c
_ system annot  _addSlots: { _curAnnot };
_ system annot  _curAnnot: "Doc: The interface to the garbage collector.\x7f Doc: Returns the total number of bytes allocated.\x7f Doc: Returns the total number of blocks allocated.\x7f Doc: Returns the total number of collections.\x7f Module: defaultBehavior\x7f Doc: The basic behavior delegate.  MOS does a very low level, behind-the-scenes lookup delegation to this special object when certain messages cannot be found through the usual lookup semantics.  This is primarly for bootstrapping and low-level object messages that all objects must respond to; like @\"_clone\", @\"_meta\", @\"isConstant\", and the basic printing and encoding facilities.\x7f Category: Finalize\x7f Category: Weak Pointer\x7f Module: constant\x7f Doc: Constant object behavior.\x7f Category: Clone\x7f Category: Complile\x7f Category: Coerce\x7f Category: Constant\x7f Module: undef\x7f Module: string\x7f Doc: Character string object.  Strings are compact vectors of character objects.\x7f Category: Coerce\x7f Category: Print\x7f Category: Coder\x7f Category: Length\x7f Category: Equal\x7f Category: Get\x7f Category: Subvector\x7f Category: Allocate\x7f Category: Set\x7f Category: Stream\x7f Returns a vector of all selectors.\x7f Module: method\x7f Doc: Is a method object.  Method objects have a meta object that respond to <CODE>@\"applyMethod:\"</CODE>.\x7f Doc: Returns the method object.\x7f Doc: Returns the argument identifier by index.\x7f Module: srcInfo\x7f Doc: A strInfo object contains a source file name and line number.  They are created by the compiler and are used in the debugger.\x7f Module: message\x7f Doc: The message object.Message objects are created by the system whenever a message is sent to an object. Users can dynamically create messages by cloning the message object. \x7f Category: Print\x7f Doc: Send the message to its receiver.\x7f Doc: Send the message to the specified receiver.  Modifies the message's receiver.\x7f Doc: The message that spawned this message.\x7f Doc: The selector for the message.\x7f Doc: The method lookup context, if @u, then the receiver is assumed to be the implementor of the method.\x7f Doc: The receiver of the method.\x7f Doc: The vector object containing the arguments.\x7f Doc: The vector object containing the arguments.\x7f Doc: The sourceInfor object containing the source location of the generation of this message.\x7f Doc: The method that implements the method for the reciever.\x7f Doc: The object that implemented the method for the receiver.  This object is usually the receiver, but may not be if some delegate object is implementing the method.\x7f Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: End-of-stream\x7f Category: Internal\x7f Category: Open\x7f Doc: A new stream must be opened before use.\nA resource identifier (either a filename or a system-level file descriptor) and the stream mode must be specified.\n\nValid modes are:\n\n       r      Open  text  file  for reading.  The stream is posi-\n              tioned at the beginning of the file.\n\n       r+     Open for reading and writing.  The stream is  posi-\n              tioned at the beginning of the file.\n\n       w      Truncate  file  to  zero length or create text file\n              for writing.   The  stream  is  positioned  at  the\n              beginning of the file.\n\n       w+     Open  for reading and writing.  The file is created\n              if it does not exist, otherwise  it  is  truncated.\n              The  stream  is  positioned at the beginning of the\n              file.\n\n       a      Open for writing.  The file is created if  it  does\n              not  exist.  The stream is positioned at the end of\n              the file.\n\n       a+     Open for reading and writing.  The file is  created\n              if  it does not exist.  The stream is positioned at\n              the end of the file.\x7f Doc: Opens the stream on the file with the specified mode.\x7f Doc: Reopens the stream on the file with the specified mode.\x7f Category: Stream\x7f Doc: These methods implement the stream protocol.\x7f Category: Output\x7f Doc: All output stream objects must implement:\x7f Category: Input";
self error _annot: (_ system annot  _curAnnot);
self error _annot: (_ system annot  _curAnnot) For: "\01printOn_";
;
self error _annot: (_ system annot  _curAnnot) For: "\01handleError_";
;
self error _annot: (_ system annot  _curAnnot) For: "\01errorHandler";
;
self errorCatcher _annot: (_ system annot  _curAnnot);
self errorCatcher _annot: (_ system annot  _curAnnot) For: "\01value_";
;
self errorHandler _annot: (_ system annot  _curAnnot);
self errorHandler _annot: (_ system annot  _curAnnot) For: "\01begin";
;
self errorHandler _annot: (_ system annot  _curAnnot) For: "\01end";
;
self errorHandler _annot: (_ system annot  _curAnnot) For: "\01handleError_";
;
self errorHandler _annot: (_ system annot  _curAnnot) For: "\01previousHandler";
;
