# Do not modify. Created by annot.pl stream.c
_ system annot  _addSlots: { _curAnnot };
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: End-of-stream\x7f Doc: The end-of-stream object.\nThe end-of-stream object is the value returned from @\"readString:\", @\"readChar\", and @\"peekChar\" when a end-of-stream condition happens at the stream implementation level.";
self eos _annot: (_ system annot  _curAnnot);
_ system annot  _curAnnot: "Module: constant\x7f Doc: Constant object behavior.\x7f Category: Complile\x7f Doc: Compile the reciever as a literal value (or constant).";
self eos _annot: (_ system annot  _curAnnot) For: "\01compile_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: End-of-stream\x7f Doc: The end-of-stream object.\nThe end-of-stream object is the value returned from @\"readString:\", @\"readChar\", and @\"peekChar\" when a end-of-stream condition happens at the stream implementation level.\x7f Category: Print";
self eos _annot: (_ system annot  _curAnnot) For: "\01printOn_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.";
self stream _annot: (_ system annot  _curAnnot);
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Coerce";
self stream _annot: (_ system annot  _curAnnot) For: "\01asStream";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Print";
self stream _annot: (_ system annot  _curAnnot) For: "\01printOn_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Internal\x7f Doc: Initialize the stream value slots for a newly opened stream.";
self stream _annot: (_ system annot  _curAnnot) For: "\01_name_Mode_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Open\x7f Doc: A new stream must be opened before use.\nA resource identifier (either a filename or a system-level file descriptor) and the stream mode must be specified.\n\nValid modes are:\n\n       r      Open  text  file  for reading.  The stream is posi-\n              tioned at the beginning of the file.\n\n       r+     Open for reading and writing.  The stream is  posi-\n              tioned at the beginning of the file.\n\n       w      Truncate  file  to  zero length or create text file\n              for writing.   The  stream  is  positioned  at  the\n              beginning of the file.\n\n       w+     Open  for reading and writing.  The file is created\n              if it does not exist, otherwise  it  is  truncated.\n              The  stream  is  positioned at the beginning of the\n              file.\n\n       a      Open for writing.  The file is created if  it  does\n              not  exist.  The stream is positioned at the end of\n              the file.\n\n       a+     Open for reading and writing.  The file is  created\n              if  it does not exist.  The stream is positioned at\n              the end of the file.\x7f Doc: Opens the stream on the file with the specified mode.";
self stream _annot: (_ system annot  _curAnnot) For: "\01open_Mode_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Open\x7f Doc: A new stream must be opened before use.\nA resource identifier (either a filename or a system-level file descriptor) and the stream mode must be specified.\n\nValid modes are:\n\n       r      Open  text  file  for reading.  The stream is posi-\n              tioned at the beginning of the file.\n\n       r+     Open for reading and writing.  The stream is  posi-\n              tioned at the beginning of the file.\n\n       w      Truncate  file  to  zero length or create text file\n              for writing.   The  stream  is  positioned  at  the\n              beginning of the file.\n\n       w+     Open  for reading and writing.  The file is created\n              if it does not exist, otherwise  it  is  truncated.\n              The  stream  is  positioned at the beginning of the\n              file.\n\n       a      Open for writing.  The file is created if  it  does\n              not  exist.  The stream is positioned at the end of\n              the file.\n\n       a+     Open for reading and writing.  The file is  created\n              if  it does not exist.  The stream is positioned at\n              the end of the file.\x7f Doc: Reopens the stream on the file with the specified mode.";
self stream _annot: (_ system annot  _curAnnot) For: "\01reopen_Mode_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Open\x7f Doc: A new stream must be opened before use.\nA resource identifier (either a filename or a system-level file descriptor) and the stream mode must be specified.\n\nValid modes are:\n\n       r      Open  text  file  for reading.  The stream is posi-\n              tioned at the beginning of the file.\n\n       r+     Open for reading and writing.  The stream is  posi-\n              tioned at the beginning of the file.\n\n       w      Truncate  file  to  zero length or create text file\n              for writing.   The  stream  is  positioned  at  the\n              beginning of the file.\n\n       w+     Open  for reading and writing.  The file is created\n              if it does not exist, otherwise  it  is  truncated.\n              The  stream  is  positioned at the beginning of the\n              file.\n\n       a      Open for writing.  The file is created if  it  does\n              not  exist.  The stream is positioned at the end of\n              the file.\n\n       a+     Open for reading and writing.  The file is  created\n              if  it does not exist.  The stream is positioned at\n              the end of the file.\x7f Doc: Opens a new stream from a file descriptor.";
self stream _annot: (_ system annot  _curAnnot) For: "\01fdopen_Mode_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Open\x7f Doc: A new stream must be opened before use.\nA resource identifier (either a filename or a system-level file descriptor) and the stream mode must be specified.\n\nValid modes are:\n\n       r      Open  text  file  for reading.  The stream is posi-\n              tioned at the beginning of the file.\n\n       r+     Open for reading and writing.  The stream is  posi-\n              tioned at the beginning of the file.\n\n       w      Truncate  file  to  zero length or create text file\n              for writing.   The  stream  is  positioned  at  the\n              beginning of the file.\n\n       w+     Open  for reading and writing.  The file is created\n              if it does not exist, otherwise  it  is  truncated.\n              The  stream  is  positioned at the beginning of the\n              file.\n\n       a      Open for writing.  The file is created if  it  does\n              not  exist.  The stream is positioned at the end of\n              the file.\n\n       a+     Open for reading and writing.  The file is  created\n              if  it does not exist.  The stream is positioned at\n              the end of the file.\x7f Doc: Closes the stream.\nA closed stream cannot be used for I/O.";
self stream _annot: (_ system annot  _curAnnot) For: "\01close";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Stream\x7f Doc: These methods implement the stream protocol.\x7f Category: Output\x7f Doc: All output stream objects must implement:\x7f Doc: Write all characters of string to stream.  Returns stream.";
self stream _annot: (_ system annot  _curAnnot) For: "\01writeString_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Stream\x7f Doc: These methods implement the stream protocol.\x7f Category: Output\x7f Doc: All output stream objects must implement:\x7f Doc: Flush any characters buffered in stream.  Returns stream.";
self stream _annot: (_ system annot  _curAnnot) For: "\01flush";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Stream\x7f Doc: These methods implement the stream protocol.\x7f Category: Input\x7f Doc: All input streams must implement:\x7f Doc: Read a string of specified bytes or return end-of-stream object.";
self stream _annot: (_ system annot  _curAnnot) For: "\01readString_";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Stream\x7f Doc: These methods implement the stream protocol.\x7f Category: Input\x7f Doc: All input streams must implement:\x7f Doc: Read the next character from the stream or return end-of-stream object.";
self stream _annot: (_ system annot  _curAnnot) For: "\01readChar";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Stream\x7f Doc: These methods implement the stream protocol.\x7f Category: Input\x7f Doc: All input streams must implement:\x7f Doc: Peek at next character in the stream or return end-of-stream object.";
self stream _annot: (_ system annot  _curAnnot) For: "\01peekChar";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Structured Stream\x7f Doc: Constructs a structured stream object from the reciever.";
self stream _annot: (_ system annot  _curAnnot) For: "\01asStructuredStream";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Open";
self stream _annot: (_ system annot  _curAnnot) For: "\01name";
;
self stream _annot: (_ system annot  _curAnnot) For: "\01mode";
;
_ system annot  _curAnnot: "Module: stream\x7f Doc: Input/Output stream object.\nStream objects are used for system and internal character I/O.\nString objects also follow the Stream protocol.\x7f Category: Internal";
self stream _annot: (_ system annot  _curAnnot) For: "\01line";
;
